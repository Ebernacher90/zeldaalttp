OUTPUT_ARCH(arm)
SECTIONS
{
	. = 0x08000000;
	.text :
	ALIGN(4)
	{
		asm/crt0.o(.text);
		asm/rom1.o(.text);
		src/main.o(.text);
		src/main_2.o(.text);
		src/math.o(.text);
		src/rom2.o(.text);
		asm/rom2.o(.text);
		asm/rom2a.o(.text);
		asm/rom3.o(.text);
		src/rom3a.o(.text);
		asm/rom3a.o(.text);
		asm/rom4.o(.text);
		src/interface.o(.text);
		asm/interface.o(.text);
		asm/rom5.o(.text);
		asm/syscall.o(.text);
		asm/rom6.o(.text);
		tools/agbcc/lib/libgcc.a:_call_via_rX.o(.text);
		tools/agbcc/lib/libgcc.a:_divsi3.o(.text);
		tools/agbcc/lib/libgcc.a:_dvmd_tls.o(.text);
		asm/rom7.o(.text);
		tools/agbcc/lib/libgcc.a:_modsi3.o(.text);
		tools/agbcc/lib/libgcc.a:_udivsi3.o(.text);
		tools/agbcc/lib/libgcc.a:_umodsi3.o(.text);
		tools/agbcc/lib/libgcc.a:dp-bit.o(.text);
		tools/agbcc/lib/libgcc.a:fp-bit.o(.text);
		tools/agbcc/lib/libgcc.a:_lshrdi3.o(.text);
		tools/agbcc/lib/libgcc.a:_muldi3.o(.text);
		tools/agbcc/lib/libgcc.a:_negdi2.o(.text);
		src/newlib-libc/string/memcpy.o(.text);
		asm/rom8.o(.text);
		asm/4swords_text.o(.text);
	} = 0

	. = 0x08000000;
	.rodata :
	ALIGN(4)
	{
		INCLUDE "sym_rom.txt"
	} = 0

	. = 0x02000000;
	.ewram_data :
	ALIGN(4)
	{
		INCLUDE "sym_ewram.txt"
	} = 0

	. = 0x03000000;
	.bss :
	ALIGN(4)
	{
		INCLUDE "sym_iwram.txt"
	} = 0

    /* Discard everything not specifically mentioned above. */
    /DISCARD/ :
    {
        *(*);
    }
}
